pipeline {
    agent { 
        node {
        label params.Node
        }
    }
    parameters{
        choice(name: "Node", choices: ["master", "develop"], description: "Node to be used for the building and deploying")
    }
    environment{
        KUBESPRAY_DIR= "kubespray"
        PATHKEY= "/root/.ssh/id_rsa"
        MASTERNODE="root@172.168.8.1"
        N1="root@172.168.8.2"
        N2="root@172.168.8.3"
    }

    stages {        
        stage('Prepare Tools') {
            steps {
                
                echo 'Preparing tools...'
                sh "apt-get install python3 python3-pip -y"
                sh "git clone https://github.com/kubernetes-sigs/kubespray.git"
                sh "pip install -r ${KUBESPRAY_DIR}/requirements-2.12.txt"
            
            }
        }
        stage('Build') {
            steps {
                echo 'Build...'
                sh "cp -rfp ${KUBESPRAY_DIR}/inventory/sample ${KUBESPRAY_DIR}/inventory/mycluster"
                sh 'CONFIG_FILE=kubespray/inventory/mycluster/hosts.yaml python3 kubespray/contrib/inventory_builder/inventory.py 172.168.8.1 172.168.8.2 172.168.8.3'
                sh "curl https://raw.githubusercontent.com/Michal944/Jobs/master/hosts.yaml -o ${KUBESPRAY_DIR}/inventory/mycluster/hosts.yaml"
                sh "cat ${KUBESPRAY_DIR}/inventory/mycluster/hosts.yaml"
            }
        }
        stage('Connect to Remote hosts') {
            steps {
                echo "Connect to Remote hosts"
                sh "apt-get update && sudo apt-get install openssh-client -y"
                sh "apt-get install sshpass -y"
                sh "ssh-keygen -t rsa -f ${PATHKEY} -q -P '' "
                withCredentials([usernameColonPassword(credentialsId: 'mylogin', variable: 'USERPASS')]) {
                sh '''
      set +x
      curl -u "$USERPASS" https://private.server/ > output
    '''
                withCredentials([usernamePassword(credentailsId: "k8snodes", usernameVariable: USER, passwordVariable: PASSWORD)]){
                    echo "${PASSWORD} ${USER}"
                    sh "echo ${PASSWORD} | sshpass ssh-copy-id -f -i ${PATHKEY} ${USER}@${MASTERNODE}"
                    sh "echo ${PASSWORD} | sshpass ssh-copy-id -f -i ${PATHKEY} ${USER}@${N1}"
                    sh "echo ${PASSWORD} | sshpass ssh-copy-id -f -i ${PATHKEY} ${USER}@${N2}"
                }
            }
            
            
       
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }
        }
    }
    post {
        always {
            cleanWs()
            sh " rm -f ${PATHKEY}"
        }
    }
}